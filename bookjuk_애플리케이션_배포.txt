1. 애플리케이션 준비:
  /bookjuk
  ├── frontend
  │   ├── Dockerfile  (기존 내용 그대로)
  │   └── nginx.conf
  │   └── .gitignore
  ├── backend
  │   └── Dockerfile  (기존 내용 그대로)
  │   └── .gitignore
  ├── docker-compose.yml
  ├── .env  (환경 변수 등록)
  └── .gitignore  (.env)



2. 애플리케이션 github에 push:
  1) bookjuk $ git add .gitignore
  2) bookjuk $ git add ./**/.gitignore



3. EC2 인스턴스 준비:
  1) t2.small  (t2.micro 동작 안 함)
  2) Ubuntu 22.04 LTS
  3) 키페어
  4) 보안 그룹 (22, 3306, 80, 8080 포트 개방하기)
  5) 스토리지 30 GiB 이하로 적당히
  6) 탄력적 IP (선택)



4. 소스 코드 수정 및 파일 등록:

1) http://localhost...
   http://<public ip>...
2) .env (모든 환경 변수 등록, .env 파일과 docker-compose.yml 파일을 동일 경로에 두면 자동으로 docker-compose.yml 파일에서 .env 파일의 환경 변수를 사용할 수 있습니다. docker-compose.yml 파일에서는 ${변수} 또는 $변수 형식으로 환경 변수를 가져다 사용합니다.)
3) docker-compose.yml (도커 이미지 빌드 및 컨테이너 실행을 위한 코드 작성)
4) frontend/Dockerfile  (리액트 프로젝트 빌드 및 nginx 웹 서버로 배포)
5) frontend/nginx.conf  (프록시 설정 및 CORS 설정)
6) backend/Dockerfile  (부트 프로젝트 빌드 및 실행)



5. EC2 인스턴스 접속 후 설치:

1) 패키지 업데이트
$ sudo apt-get update

2) 도커 설치
$ sudo apt install -y curl
$ curl -s https://get.docker.com | sudo sh
$ sudo usermod -aG docker $USER
$ newgrp docker

3) openjdk 설치
$ sudo apt install -y openjdk-17-jdk
$ vi ~/.profile
# JAVA_HOME
export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
export PATH=$JAVA_HOME/bin:$PATH
$ source ~/.profile

4) docker-compose 설치 (uname -s : Linux 를 의미함, uname -m : x86_64 을 의미함)
$ sudo curl -L https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
$ sudo chmod +x /usr/local/bin/docker-compose



6. EC2 인스턴스에 github 소스 코드 내려 받기:
$ git clone https://github.com/teacher-min/bookjuk.git



7. EC2 인스턴스에 bookjuk 폴더 안에 .env 파일 복사하기:
MobaXTerm 이용해서 직접 드래그해서 옮기기



8. 도커 컴포즈 실행
$ docker-compose up --build -d



9. 컨테이너 실행 확인 (총 3개의 컨테이너가 동작하고 있어야 합니다.)
$ docker ps



10. 최종 확인
http://public-ip